{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hexo-casper/source/fonts/lg.svg","path":"fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/fonts/lg.woff","path":"fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/fonts/lg.eot","path":"fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/fonts/lg.ttf","path":"fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/css/markdown.css","path":"css/markdown.css","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/css/screen.css","path":"css/screen.css","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/css/allinone.min.css","path":"css/allinone.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/css/lightgallery.min.css","path":"css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/img/vimeo-play.png","path":"img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/img/youtube-play.png","path":"img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/css/highlight.css","path":"css/highlight.css","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/lazyload.js","path":"js/lazyload.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/img/video-play.png","path":"img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/sw-test.js","path":"js/sw-test.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/post.js","path":"js/post.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/post.min.js","path":"js/post.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/lightgallery.min.js","path":"js/lightgallery.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/mix/home-lazy-local.js","path":"js/mix/home-lazy-local.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/mix/post-lazy-local.min.js","path":"js/mix/post-lazy-local.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/mix/home-lazy-local.min.js","path":"js/mix/home-lazy-local.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/mix/post-lazy-local.js","path":"js/mix/post-lazy-local.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/mix/post-local.js","path":"js/mix/post-local.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/mix/post-lazy.js","path":"js/mix/post-lazy.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/mix/post-lazy.min.js","path":"js/mix/post-lazy.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-casper/source/js/mix/post-local.min.js","path":"js/mix/post-local.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hexo-casper/_config.yml","hash":"fb7a49ac86ea7d9d5069a5e74e1fb15b574e03e2","modified":1555736454759},{"_id":"themes/hexo-casper/README.md","hash":"148e9f382ea6f4629ccb394f2903c2ca27642b84","modified":1543888280000},{"_id":"source/_posts/django-nginx-uwsgi-server.md","hash":"211762f1a3de2c943870955f8bdd7eb929246f6a","modified":1555739252266},{"_id":"source/about/index.md","hash":"ec0c00dca2bf7e4be6f6b107a7776a4b9180dcfa","modified":1555667997048},{"_id":"themes/hexo-casper/scripts/index.js","hash":"80f54fc982d875f1e0b52edaa7984c0c7a5ec71e","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_layout.swig","hash":"9823c88e783d9a18284ca4058cc87c1e37d82559","modified":1543888280000},{"_id":"themes/hexo-casper/layout/archive.swig","hash":"7cf2b42bdc60676b2d8426b636448622ab10e48e","modified":1543888280000},{"_id":"source/_posts/hello-world.md","hash":"029f91fccbe8f87c0f3ea10c4042300d2fa7edc0","modified":1555664794736},{"_id":"themes/hexo-casper/layout/category.swig","hash":"1d34d688741debf67066a598c0b7d6eacdc1805e","modified":1543888280000},{"_id":"themes/hexo-casper/layout/index.swig","hash":"bfee92ccc3f412977fc6382dbca1f18b6e948056","modified":1543888280000},{"_id":"themes/hexo-casper/layout/page.swig","hash":"b99287ffe8565bb3d6e48d66061a6b171b20bc91","modified":1543888280000},{"_id":"themes/hexo-casper/layout/post.swig","hash":"85b2916c8c4c798435e799ae5d902ff8f5d5ac93","modified":1543888280000},{"_id":"themes/hexo-casper/layout/tag.swig","hash":"1358b7cbf816196d4cc00503e065d4f5cf0404af","modified":1543888280000},{"_id":"themes/hexo-casper/languages/default.yml","hash":"0727744d43e06abe5780bb0d8ebe428d216cac38","modified":1543888280000},{"_id":"themes/hexo-casper/languages/fr.yml","hash":"5628a766e38663f45e288a7fb0ce578941dc4e79","modified":1543888280000},{"_id":"themes/hexo-casper/languages/nl.yml","hash":"865639ff72be884c40bbcc1ea2477d50a3549b12","modified":1543888280000},{"_id":"themes/hexo-casper/languages/no.yml","hash":"637efbc95bc1386d3bb3edfb1a0942524bc6bc8c","modified":1543888280000},{"_id":"themes/hexo-casper/languages/ru.yml","hash":"3d7e0d5429f9a88a01a08940f2ea44546b01ce42","modified":1543888280000},{"_id":"themes/hexo-casper/languages/zh-CN.yml","hash":"d219b9301ea4375b25675703fa14d1db8ca8bd9e","modified":1543888280000},{"_id":"themes/hexo-casper/languages/zh-TW.yml","hash":"949fa7fbc005b14e487f43eb85e77875bffcb39b","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/footer.swig","hash":"8a49c94844ea130269eb995ff8f15859780399be","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/head.swig","hash":"51f688b8dd1ece8ba3728fdf469781448339ca74","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/about.swig","hash":"9c919c057f6e47b4945f563d6a6cd288c71a4f7a","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/header.swig","hash":"791dce21cd531692c357e71f6c7fb2579063cc28","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/index.swig","hash":"df379070a30a63395abf99c530bac46952464ebc","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/page.swig","hash":"047a2a2c64d57648d0d1cf02768f4098fd3c6384","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/search.swig","hash":"9cfe07f165d4e57b98f5ef391aa68bee82cac98d","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/javascript.swig","hash":"0e01ba0ca400ce2dd22c2d0d251ae096ecc1049c","modified":1543888280000},{"_id":"themes/hexo-casper/source/fonts/lg.svg","hash":"50a2216596766a48655e3f87e1d1000ba93bf8a1","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/widget.swig","hash":"131f2b9540d5f837fe1c7f64ac7005f48ecf14ab","modified":1543888280000},{"_id":"themes/hexo-casper/source/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1543888280000},{"_id":"themes/hexo-casper/source/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1543888280000},{"_id":"themes/hexo-casper/source/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1543888280000},{"_id":"themes/hexo-casper/source/css/markdown.css","hash":"6a21a90bec15f27d0b6110e22f0a05b533ceac5e","modified":1543888280000},{"_id":"themes/hexo-casper/source/css/screen.css","hash":"b649355ef90fb185fcad37ea8fb3d57f3117c88f","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/post.swig","hash":"a731e1e1460efc11965a97f880edbb59a5cf7545","modified":1543888280000},{"_id":"themes/hexo-casper/source/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1543888280000},{"_id":"themes/hexo-casper/source/css/style.css","hash":"541c2b69aa3188553b1cab7eb47eec83c87e6c8c","modified":1543888280000},{"_id":"themes/hexo-casper/source/css/allinone.min.css","hash":"960be7d7a204c1d479db4c89f6e58b8ff5d03f60","modified":1543888280000},{"_id":"themes/hexo-casper/source/css/lightgallery.min.css","hash":"9e76bdad163856774a96b1230a08dc506600a973","modified":1543888280000},{"_id":"themes/hexo-casper/source/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1543888280000},{"_id":"themes/hexo-casper/source/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1543888280000},{"_id":"themes/hexo-casper/source/css/highlight.css","hash":"f24dc40cd6ecab543623896df89399ae03bd344e","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/lazyload.js","hash":"0b31dabace05042ee29f5989b0191e7e4072a88f","modified":1543888280000},{"_id":"themes/hexo-casper/source/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/sw-test.js","hash":"d01a7f14328e73f3578240e2a391c209e275912b","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/post.js","hash":"19c7b84fc868688ffa117bdb30c7b28833e35232","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/post.min.js","hash":"4b22673d9f88c7beaccd86485e6e75fe87d4ac1d","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/local-search.js","hash":"652d22a71637c8e30cfa7356d5a8d5e402829421","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/lightgallery.min.js","hash":"35bac37c2343c1946d1af64254ec1ab98bb2c247","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/widget/category.swig","hash":"932a26fca0534b185bff0b02d329db3768b3ba5e","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/widget/tagcloud.swig","hash":"8520b6d747b3daf800871be9163b23a784d668b4","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/public/fload-header.swig","hash":"9c7701a70020114672a1c51d1ebced3ddf860789","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/public/nav.swig","hash":"1b3ccfe6836d79ac04913552e0893885eb0600f0","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/public/toc.swig","hash":"30c6c3ca74d7b496e03ec856e8342515f73386d3","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/widget/recent_posts.swig","hash":"9a08423189bf44d7a19ae6bf6314c5d537453291","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/mix/home-lazy-local.js","hash":"2bc5cc6ccfb5486ad1bbf616071ca141e238411d","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/mix/post-lazy-local.min.js","hash":"840ecd5212bf35f806fb6b7ec66e497f4aa309fb","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/mix/home-lazy-local.min.js","hash":"caa8f3748286b195621690690f8d0766c3fb7e4b","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/mix/post-lazy-local.js","hash":"f40f01965bcbde9388ef70b072b3822b68a8c00a","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/public/social.swig","hash":"5c0d27bd616d38f32a8fbfeabf7eb1fe6a4fe8cd","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/mix/post-local.js","hash":"8fde069fcd701c517aba18a1f85f631bac0a7774","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/mix/post-lazy.js","hash":"a998a762da6a4f4d91bddd321f40303dc589636c","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/mix/post-lazy.min.js","hash":"de1a54a6f8279b49b83ba3c3a85a1794986bca52","modified":1543888280000},{"_id":"themes/hexo-casper/source/js/mix/post-local.min.js","hash":"24d7ed166c7757cd6b12c3e2621f83d39eb4dd78","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/public/icons/avatar.svg","hash":"86217ef513f535a9864b59a93aa0bc2f9ab85378","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/public/icons/facebook.svg","hash":"c0addca4f00b849929b1ad5fa56663a12c11677a","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/public/icons/bilibili.svg","hash":"1c01318c13bf5440e305354992a7558e8ed02b26","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/public/icons/github.svg","hash":"21d7913a530ad2a835ba521e0c152f35cbaab4c1","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/public/icons/weibo.svg","hash":"89796272786fd0983f0c956ef39efb52e5956669","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/public/icons/youtube.svg","hash":"d6a5cf004954676b2114a491e498936f9333ef7e","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/public/icons/twitter.svg","hash":"540aa3b11d93e9677acd16211e8cdc5de817688e","modified":1543888280000},{"_id":"themes/hexo-casper/layout/_partials/public/icons/telegram.svg","hash":"7ffdcca47a2de0c33deee9c6aa6cc77b48bc700b","modified":1543888280000},{"_id":"public/sw.js","hash":"ea97966c213ea0cfdf7b0fe72341cb0feb2f8dc6","modified":1555739270357},{"_id":"public/searchData.json","hash":"01479c32a10569f49ccdc856850914bb98eefa3c","modified":1555739270357},{"_id":"public/searchVersion.txt","hash":"5ca2e7b5843f04cb399cc1c16d94affaaaa233fb","modified":1555739270358},{"_id":"public/about/index.html","hash":"5ca681486f8d072bff5af426f2ddb8dafa1fdc84","modified":1555739270358},{"_id":"public/archives/index.html","hash":"d7ae65d0b411485f1ded123e5b76757287e10a4f","modified":1555739270358},{"_id":"public/archives/2019/04/index.html","hash":"99b748108a14725a14d2760cbdd87d66fc77c1c0","modified":1555739270358},{"_id":"public/archives/2019/index.html","hash":"a47dfb998783c951f99b09798d71ff1da05ef33d","modified":1555739270358},{"_id":"public/index.html","hash":"7312c0f9ea3c3e02fa2a3d14af9681b806c7265c","modified":1555739270358},{"_id":"public/2019/04/19/hello-world/index.html","hash":"f8c9999d0df5b4a69403dd0abbc3e70b209d828d","modified":1555739270358},{"_id":"public/2019/04/20/django-nginx-uwsgi-server/index.html","hash":"f1dab38f70c9a09d5adce3a0f2e25c9ca2189d49","modified":1555739270358},{"_id":"public/tags/django-web服务器/index.html","hash":"c0023871896ea7867377bf70026b9b3e9734de94","modified":1555739038057},{"_id":"public/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1555739038060},{"_id":"public/fonts/lg.svg","hash":"50a2216596766a48655e3f87e1d1000ba93bf8a1","modified":1555739038060},{"_id":"public/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1555739038060},{"_id":"public/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1555739038060},{"_id":"public/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1555739038060},{"_id":"public/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1555739038060},{"_id":"public/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1555739038069},{"_id":"public/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1555739038069},{"_id":"public/css/markdown.css","hash":"6a21a90bec15f27d0b6110e22f0a05b533ceac5e","modified":1555739038075},{"_id":"public/css/style.css","hash":"541c2b69aa3188553b1cab7eb47eec83c87e6c8c","modified":1555739038075},{"_id":"public/css/highlight.css","hash":"f24dc40cd6ecab543623896df89399ae03bd344e","modified":1555739038076},{"_id":"public/js/sw-test.js","hash":"d01a7f14328e73f3578240e2a391c209e275912b","modified":1555739038077},{"_id":"public/js/lazyload.js","hash":"0b31dabace05042ee29f5989b0191e7e4072a88f","modified":1555739038078},{"_id":"public/js/post.min.js","hash":"4b22673d9f88c7beaccd86485e6e75fe87d4ac1d","modified":1555739038078},{"_id":"public/js/local-search.js","hash":"652d22a71637c8e30cfa7356d5a8d5e402829421","modified":1555739038078},{"_id":"public/js/mix/home-lazy-local.min.js","hash":"caa8f3748286b195621690690f8d0766c3fb7e4b","modified":1555739038078},{"_id":"public/js/post.js","hash":"19c7b84fc868688ffa117bdb30c7b28833e35232","modified":1555739038080},{"_id":"public/js/mix/post-lazy-local.min.js","hash":"840ecd5212bf35f806fb6b7ec66e497f4aa309fb","modified":1555739038080},{"_id":"public/js/mix/post-local.js","hash":"8fde069fcd701c517aba18a1f85f631bac0a7774","modified":1555739038081},{"_id":"public/js/mix/home-lazy-local.js","hash":"2bc5cc6ccfb5486ad1bbf616071ca141e238411d","modified":1555739038081},{"_id":"public/js/mix/post-lazy.js","hash":"a998a762da6a4f4d91bddd321f40303dc589636c","modified":1555739038081},{"_id":"public/js/mix/post-lazy.min.js","hash":"de1a54a6f8279b49b83ba3c3a85a1794986bca52","modified":1555739038081},{"_id":"public/js/mix/post-local.min.js","hash":"24d7ed166c7757cd6b12c3e2621f83d39eb4dd78","modified":1555739038081},{"_id":"public/css/lightgallery.min.css","hash":"9e76bdad163856774a96b1230a08dc506600a973","modified":1555739038091},{"_id":"public/js/mix/post-lazy-local.js","hash":"f40f01965bcbde9388ef70b072b3822b68a8c00a","modified":1555739038091},{"_id":"public/css/screen.css","hash":"b649355ef90fb185fcad37ea8fb3d57f3117c88f","modified":1555739038098},{"_id":"public/js/lightgallery.min.js","hash":"35bac37c2343c1946d1af64254ec1ab98bb2c247","modified":1555739038098},{"_id":"public/css/allinone.min.css","hash":"960be7d7a204c1d479db4c89f6e58b8ff5d03f60","modified":1555739038103},{"_id":"public/categories/Django/index.html","hash":"17e1ca982ff2626e1d1ddf409587a996711f35ee","modified":1555739270360},{"_id":"public/tags/django/index.html","hash":"18c19903009190df9819390f54e9cfe23445e46c","modified":1555739270360},{"_id":"public/tags/web服务器/index.html","hash":"3cbf9afe698b9df33746fb9000845cd4affcfa3a","modified":1555739270361}],"Category":[{"name":"Django","_id":"cjup2zqpz0000x8umt68xxheu"}],"Data":[],"Page":[{"title":"about","date":"2019-04-19T09:59:57.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-04-19 17:59:57\n---\n","updated":"2019-04-19T09:59:57.048Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjup2ur1k000040umvfoud8ts","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-04-19T09:06:34.736Z","updated":"2019-04-19T09:06:34.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjup2ur1n000140um1v7bc5nz","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"Centos下搭建Django网站环境","date":"2019-04-20T05:32:14.000Z","cover_img":"http://pq8vrurbf.bkt.clouddn.com/django-server.jpg","feature_img":"http://pq8vrurbf.bkt.clouddn.com/django-server.jpg","description":"在Centos7中，结合nginx和uwsgi，搭建一个完整的django网站服务器...","keywords":"django,nginx,uwsgi,server","_content":"\n### 前言\n\n作为django网站开发的学习者，这是我在搭建Centos-Django-Nginx-Uwsgi服务器时留下的笔记。在搭建过程中，参考了大量的网上教程，但是没有一篇能完整地带我正确地走过全部流程，大坑小坑不计其数，因此在这里和大家分享一下我搭建过程中的整个流程，希望对学习者有所帮助。\n\n### 安装Python3.6\n\n- 安装依赖工具\n\n  ```\n  sudo yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel mysql-devel gcc gcc-devel python-devel\n  ```\n\n- 下载python3.6.8\n\n  ```\n  wget https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz\n  ```\n\n- 解压\n\n  ```\n  tar -zxvf Python-3.6.8.tgz\n  ```\n\n- 将python移动至规范的软件安装目录\n\n  ```\n  sudo mv Python-3.6.8 /usr/local\n  ```\n\n- 编译安装python\n\n  ```\n  cd /usr/local/Python-3.6.8/\n  ./configure\n  make\n  sudo make install\n  ```\n\n### 安装虚拟环境\n\n- 安装virtualenvwrapper\n\n  ```\n  # update pip\n  sudo /usr/local/bin/pip3 install --upgrade pip\n  sudo /usr/local/bin/pip3 install virtualenv\n  sudo /usr/local/bin/pip3 install virtualenvwrapper\n  ```\n\n- 创建目录存放虚拟环境\n\n  ```\n  mkdir $HOME/.virtualenvs\n  ```\n\n- 修改~/.bashrc文件\n\n  ```\n  sudo vim~/.bashrc\n  # 添加下面的内容\n  export WORKON_HOME=$HOME/.virtualenvs\n  export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3.6\n  source /usr/local/bin/virtualenvwrapper.sh\n  ```\n\n- 运行\n\n  ```\n  source ~/.bashrc\n  ```\n\n- 创建并进入虚拟环境\n\n  ```\n  mkvirtualenv myenv\n  ```\n\n### 安装Django并创建项目\n\n- 虚拟环境下安装Django==1.11.20\n\n  ```\n  pip install django==1.11.20\n  ```\n\n- 创建项目\n\n  ```\n  # 进入放置项目的文件夹\n  cd /home/root/pydj\n  sudo /home/admin/.virtualenvs/myenv/bin/django-admin startproject mysite\n  ```\n\n- 获取文件夹权限，防止runserver时数据库出错\n\n  ```\n  sudo chmod -R 777 /home/root/pydj\n  ```\n\n- 将你的服务器ip添加到settings.py，避免外网访问错误\n\n  ```\n  ALLOWED_HOSTS = ['myip']\n  ```\n\n- 试运行项目，不指定0.0.0.0外网访问会出错\n\n  ```\n  python manage.py runserver 0.0.0.0:8000\n  ```\n\n  访问：http://myip:8000 可以看到：\n\n  ```\n  It worked!\n  Congratulations on your first Django-powered page.\n  Next, start your first app by running python manage.py startapp [app_label].\n  You're seeing this message because you have DEBUG = True in your Django settings file and you haven't configured any URLs. Get to work!\n  ```\n\n### uWSGI的安装和配置\n\n- 虚拟环境下安装uWSGI\n\n  ```\n  pip install uwsgi\n  ```\n\n- 测试\n\n  创建一个test.py文件，内容如下：\n\n  ```\n  def application(env, start_response):\n      start_response('200 OK', [('Content-Type','text/html')])\n      return [b\"Hello World\"] # python3\n      #return [\"Hello World\"] # python2\n  ```\n\n  运行uWSGI:\n\n  ```\n  uwsgi --http :8000 --wsgi-file test.py\n  ```\n\n  访问 http://myip:8000 可以看到：Hello World\n\n- 使用uWSGI运行Django项目\n\n  ```\n  uwsgi --http :8000 --module mysite.wsgi\n  ```\n\n### nginx的安装和配置\n\n- 安装nginx\n\n  ```\n  # 安装nginx源\n  sudo rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\n  安装nginx\n  yum install -y nginx\n  ```\n\n- 测试\n\n  ```\n  sudo nginx\n  ```\n\n  浏览器打开ip地址可以看到Welcome to nginx!\n\n- 进入django项目文件夹，创建uwsgi_params文件，添加如下内容：\n\n  ```\n  uwsgi_param  QUERY_STRING       $query_string;\n  uwsgi_param  REQUEST_METHOD     $request_method;\n  uwsgi_param  CONTENT_TYPE       $content_type;\n  uwsgi_param  CONTENT_LENGTH     $content_length;\n  \n  uwsgi_param  REQUEST_URI        $request_uri;\n  uwsgi_param  PATH_INFO          $document_uri;\n  uwsgi_param  DOCUMENT_ROOT      $document_root;\n  uwsgi_param  SERVER_PROTOCOL    $server_protocol;\n  uwsgi_param  REQUEST_SCHEME     $scheme;\n  uwsgi_param  HTTPS              $https if_not_empty;\n  \n  uwsgi_param  REMOTE_ADDR        $remote_addr;\n  uwsgi_param  REMOTE_PORT        $remote_port;\n  uwsgi_param  SERVER_PORT        $server_port;\n  uwsgi_param  SERVER_NAME        $server_name;\n  ```\n\n- 在 /etc/nginx/ 文件夹下创建 sites-enabled 文件夹，并在其下创建nginx.conf，添加如下内容：\n\n  ```\n  # nginx.conf\n  \n  # the upstream component nginx needs to connect to\n  upstream django {\n      # server unix:///path/to/your/mysite/mysite.sock; # for a file socket\n      server 127.0.0.1:8001; # for a web port socket (we'll use this first)\n  }\n  \n  # configuration of the server\n  server {\n      # the port your site will be served on\n      listen      80;\n      # the domain name it will serve for\n      server_name .example.com; # substitute your machine's IP address or FQDN\n      charset     utf-8;\n  \n      # max upload size\n      client_max_body_size 75M;   # adjust to taste\n  \n      # Django media\n      location /media  {\n          alias /path/to/your/mysite/media;  # your Django project's media files - amend as required\n      }\n  \n      location /static {\n          alias /path/to/your/mysite/static; # your Django project's static files - amend as required\n      }\n  \n      # Finally, send all non-media requests to the Django server.\n      location / {\n          uwsgi_pass  django;\n          include     /path/to/your/mysite/uwsgi_params; # the uwsgi_params file you installed\n      }\n  }\n  ```\n\n- 修改/etc/nginx/nginx.conf，在http下添加：\n\n  ```\n  include /etc/nginx/sites-enabled/*;\n  ```\n\n- 部署静态文件\n\n  在运行nginx之前，你必须收集所有的Django静态文件到静态文件夹里。首先，必须编辑mysite/settings.py，添加:\n\n  ```\n  STATIC_ROOT = os.path.join(BASE_DIR, \"static/\")\n  ```\n\n  然后运行\n\n  ```\n  python manage.py collectstatic\n  ```\n\n- 重启nginx\n\n  ```\n  sudo /usr/sbin/nginx -s reload\n  ```\n\n  此时打开 ip:8000 会出现502错误，因为nginx与uwsgi的socket通信还没开始。\n\n  虚拟环境下运行：\n\n  ```\n  uwsgi --socket :8001 --wsgi-file test.py\n  ```\n\n  此时，打开ip:8000可以看到Hello World。\n\n### 使用Unix sockets代替端口\n\n编辑sites-enabled文件夹下的nginx.conf文件，修改如下：\n\n```\nserver unix:///path/to/your/mysite/mysite.sock; # for a file socket  \n# server 127.0.0.1:8001; # for a web port socket (we'll use this first)\n```\n\n重启nginx。\n\n重新运行uWSGI：\n\n```\nuwsgi --socket mysite.sock --wsgi-file test.py --chmod-socket=666\n```\n\n### 使用uWSGI和Nginx运行django项目\n\n```\nuwsgi --socket mysite.sock --module mysite.wsgi --chmod-socket=666\n```\n\n现在uwsgi和nginx应该在服务你的Django应用，而不是hello world。\n\n### 配置uWSGI的ini文件\n\n- 项目文件夹下创建django_uwsgi.ini，添加以下内容：\n\n  ```\n  # django_uwsgi.ini file\n  [uwsgi]\n  \n  # Django-related settings\n  # the base directory (full path)\n  chdir           = /path/to/your/project  \n  # Django's wsgi file\n  module          = project.wsgi  \n  # the virtualenv (full path)\n  #home            = /path/to/virtualenv\n  \n  # process-related settings\n  # master\n  master          = true  \n  # maximum number of worker processes\n  processes       = 10  \n  # the socket (use the full path to be safe\n  socket          = mysite.sock  \n  # ... with appropriate permissions - may be needed\n  chmod-socket    = 666\n  # clear environment on exit\n  vacuum          = true\n  ```\n\n  使用如下命令运行：\n\n  ```\n  uwsgi --ini django_uwsgi.ini\n  ```\n\n### 附\n\n- 让uwsgi在后台运行：\n\n  ```\n  uwsgi --ini mysite_uwsgi.ini --logto mysite.log &\n  ```\n\n- 查看uwsgi进程\n\n  ```\n  ps aux|grep uwsgi\n  ```\n\n- 杀死uwsgi进程\n\n  ```\n  #停止进程\n  uwsgi --stop uwsgi.pid\n  #kill pid会发送SIGTERM，只会导致重启，而不是结束掉。需要发送SIGINT或SIGQUIT，对应着是INT才可以\n  killall -s INT uwsgi\n  ```\n\n以上就是在服务器中部署Django项目的所有过程，如有不当之处请指正。","source":"_posts/django-nginx-uwsgi-server.md","raw":"---\ntitle: Centos下搭建Django网站环境\ndate: 2019-04-20 13:32:14\ncategories: \n- Django\ntags:\n- django\n- web服务器\ncover_img: http://pq8vrurbf.bkt.clouddn.com/django-server.jpg\nfeature_img: http://pq8vrurbf.bkt.clouddn.com/django-server.jpg\ndescription: 在Centos7中，结合nginx和uwsgi，搭建一个完整的django网站服务器...\nkeywords: django,nginx,uwsgi,server\n---\n\n### 前言\n\n作为django网站开发的学习者，这是我在搭建Centos-Django-Nginx-Uwsgi服务器时留下的笔记。在搭建过程中，参考了大量的网上教程，但是没有一篇能完整地带我正确地走过全部流程，大坑小坑不计其数，因此在这里和大家分享一下我搭建过程中的整个流程，希望对学习者有所帮助。\n\n### 安装Python3.6\n\n- 安装依赖工具\n\n  ```\n  sudo yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel mysql-devel gcc gcc-devel python-devel\n  ```\n\n- 下载python3.6.8\n\n  ```\n  wget https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz\n  ```\n\n- 解压\n\n  ```\n  tar -zxvf Python-3.6.8.tgz\n  ```\n\n- 将python移动至规范的软件安装目录\n\n  ```\n  sudo mv Python-3.6.8 /usr/local\n  ```\n\n- 编译安装python\n\n  ```\n  cd /usr/local/Python-3.6.8/\n  ./configure\n  make\n  sudo make install\n  ```\n\n### 安装虚拟环境\n\n- 安装virtualenvwrapper\n\n  ```\n  # update pip\n  sudo /usr/local/bin/pip3 install --upgrade pip\n  sudo /usr/local/bin/pip3 install virtualenv\n  sudo /usr/local/bin/pip3 install virtualenvwrapper\n  ```\n\n- 创建目录存放虚拟环境\n\n  ```\n  mkdir $HOME/.virtualenvs\n  ```\n\n- 修改~/.bashrc文件\n\n  ```\n  sudo vim~/.bashrc\n  # 添加下面的内容\n  export WORKON_HOME=$HOME/.virtualenvs\n  export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3.6\n  source /usr/local/bin/virtualenvwrapper.sh\n  ```\n\n- 运行\n\n  ```\n  source ~/.bashrc\n  ```\n\n- 创建并进入虚拟环境\n\n  ```\n  mkvirtualenv myenv\n  ```\n\n### 安装Django并创建项目\n\n- 虚拟环境下安装Django==1.11.20\n\n  ```\n  pip install django==1.11.20\n  ```\n\n- 创建项目\n\n  ```\n  # 进入放置项目的文件夹\n  cd /home/root/pydj\n  sudo /home/admin/.virtualenvs/myenv/bin/django-admin startproject mysite\n  ```\n\n- 获取文件夹权限，防止runserver时数据库出错\n\n  ```\n  sudo chmod -R 777 /home/root/pydj\n  ```\n\n- 将你的服务器ip添加到settings.py，避免外网访问错误\n\n  ```\n  ALLOWED_HOSTS = ['myip']\n  ```\n\n- 试运行项目，不指定0.0.0.0外网访问会出错\n\n  ```\n  python manage.py runserver 0.0.0.0:8000\n  ```\n\n  访问：http://myip:8000 可以看到：\n\n  ```\n  It worked!\n  Congratulations on your first Django-powered page.\n  Next, start your first app by running python manage.py startapp [app_label].\n  You're seeing this message because you have DEBUG = True in your Django settings file and you haven't configured any URLs. Get to work!\n  ```\n\n### uWSGI的安装和配置\n\n- 虚拟环境下安装uWSGI\n\n  ```\n  pip install uwsgi\n  ```\n\n- 测试\n\n  创建一个test.py文件，内容如下：\n\n  ```\n  def application(env, start_response):\n      start_response('200 OK', [('Content-Type','text/html')])\n      return [b\"Hello World\"] # python3\n      #return [\"Hello World\"] # python2\n  ```\n\n  运行uWSGI:\n\n  ```\n  uwsgi --http :8000 --wsgi-file test.py\n  ```\n\n  访问 http://myip:8000 可以看到：Hello World\n\n- 使用uWSGI运行Django项目\n\n  ```\n  uwsgi --http :8000 --module mysite.wsgi\n  ```\n\n### nginx的安装和配置\n\n- 安装nginx\n\n  ```\n  # 安装nginx源\n  sudo rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\n  安装nginx\n  yum install -y nginx\n  ```\n\n- 测试\n\n  ```\n  sudo nginx\n  ```\n\n  浏览器打开ip地址可以看到Welcome to nginx!\n\n- 进入django项目文件夹，创建uwsgi_params文件，添加如下内容：\n\n  ```\n  uwsgi_param  QUERY_STRING       $query_string;\n  uwsgi_param  REQUEST_METHOD     $request_method;\n  uwsgi_param  CONTENT_TYPE       $content_type;\n  uwsgi_param  CONTENT_LENGTH     $content_length;\n  \n  uwsgi_param  REQUEST_URI        $request_uri;\n  uwsgi_param  PATH_INFO          $document_uri;\n  uwsgi_param  DOCUMENT_ROOT      $document_root;\n  uwsgi_param  SERVER_PROTOCOL    $server_protocol;\n  uwsgi_param  REQUEST_SCHEME     $scheme;\n  uwsgi_param  HTTPS              $https if_not_empty;\n  \n  uwsgi_param  REMOTE_ADDR        $remote_addr;\n  uwsgi_param  REMOTE_PORT        $remote_port;\n  uwsgi_param  SERVER_PORT        $server_port;\n  uwsgi_param  SERVER_NAME        $server_name;\n  ```\n\n- 在 /etc/nginx/ 文件夹下创建 sites-enabled 文件夹，并在其下创建nginx.conf，添加如下内容：\n\n  ```\n  # nginx.conf\n  \n  # the upstream component nginx needs to connect to\n  upstream django {\n      # server unix:///path/to/your/mysite/mysite.sock; # for a file socket\n      server 127.0.0.1:8001; # for a web port socket (we'll use this first)\n  }\n  \n  # configuration of the server\n  server {\n      # the port your site will be served on\n      listen      80;\n      # the domain name it will serve for\n      server_name .example.com; # substitute your machine's IP address or FQDN\n      charset     utf-8;\n  \n      # max upload size\n      client_max_body_size 75M;   # adjust to taste\n  \n      # Django media\n      location /media  {\n          alias /path/to/your/mysite/media;  # your Django project's media files - amend as required\n      }\n  \n      location /static {\n          alias /path/to/your/mysite/static; # your Django project's static files - amend as required\n      }\n  \n      # Finally, send all non-media requests to the Django server.\n      location / {\n          uwsgi_pass  django;\n          include     /path/to/your/mysite/uwsgi_params; # the uwsgi_params file you installed\n      }\n  }\n  ```\n\n- 修改/etc/nginx/nginx.conf，在http下添加：\n\n  ```\n  include /etc/nginx/sites-enabled/*;\n  ```\n\n- 部署静态文件\n\n  在运行nginx之前，你必须收集所有的Django静态文件到静态文件夹里。首先，必须编辑mysite/settings.py，添加:\n\n  ```\n  STATIC_ROOT = os.path.join(BASE_DIR, \"static/\")\n  ```\n\n  然后运行\n\n  ```\n  python manage.py collectstatic\n  ```\n\n- 重启nginx\n\n  ```\n  sudo /usr/sbin/nginx -s reload\n  ```\n\n  此时打开 ip:8000 会出现502错误，因为nginx与uwsgi的socket通信还没开始。\n\n  虚拟环境下运行：\n\n  ```\n  uwsgi --socket :8001 --wsgi-file test.py\n  ```\n\n  此时，打开ip:8000可以看到Hello World。\n\n### 使用Unix sockets代替端口\n\n编辑sites-enabled文件夹下的nginx.conf文件，修改如下：\n\n```\nserver unix:///path/to/your/mysite/mysite.sock; # for a file socket  \n# server 127.0.0.1:8001; # for a web port socket (we'll use this first)\n```\n\n重启nginx。\n\n重新运行uWSGI：\n\n```\nuwsgi --socket mysite.sock --wsgi-file test.py --chmod-socket=666\n```\n\n### 使用uWSGI和Nginx运行django项目\n\n```\nuwsgi --socket mysite.sock --module mysite.wsgi --chmod-socket=666\n```\n\n现在uwsgi和nginx应该在服务你的Django应用，而不是hello world。\n\n### 配置uWSGI的ini文件\n\n- 项目文件夹下创建django_uwsgi.ini，添加以下内容：\n\n  ```\n  # django_uwsgi.ini file\n  [uwsgi]\n  \n  # Django-related settings\n  # the base directory (full path)\n  chdir           = /path/to/your/project  \n  # Django's wsgi file\n  module          = project.wsgi  \n  # the virtualenv (full path)\n  #home            = /path/to/virtualenv\n  \n  # process-related settings\n  # master\n  master          = true  \n  # maximum number of worker processes\n  processes       = 10  \n  # the socket (use the full path to be safe\n  socket          = mysite.sock  \n  # ... with appropriate permissions - may be needed\n  chmod-socket    = 666\n  # clear environment on exit\n  vacuum          = true\n  ```\n\n  使用如下命令运行：\n\n  ```\n  uwsgi --ini django_uwsgi.ini\n  ```\n\n### 附\n\n- 让uwsgi在后台运行：\n\n  ```\n  uwsgi --ini mysite_uwsgi.ini --logto mysite.log &\n  ```\n\n- 查看uwsgi进程\n\n  ```\n  ps aux|grep uwsgi\n  ```\n\n- 杀死uwsgi进程\n\n  ```\n  #停止进程\n  uwsgi --stop uwsgi.pid\n  #kill pid会发送SIGTERM，只会导致重启，而不是结束掉。需要发送SIGINT或SIGQUIT，对应着是INT才可以\n  killall -s INT uwsgi\n  ```\n\n以上就是在服务器中部署Django项目的所有过程，如有不当之处请指正。","slug":"django-nginx-uwsgi-server","published":1,"updated":"2019-04-20T05:47:32.266Z","_id":"cjup2ur3a000240um4dsefafj","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>作为django网站开发的学习者，这是我在搭建Centos-Django-Nginx-Uwsgi服务器时留下的笔记。在搭建过程中，参考了大量的网上教程，但是没有一篇能完整地带我正确地走过全部流程，大坑小坑不计其数，因此在这里和大家分享一下我搭建过程中的整个流程，希望对学习者有所帮助。</p>\n<h3 id=\"安装Python3-6\"><a href=\"#安装Python3-6\" class=\"headerlink\" title=\"安装Python3.6\"></a>安装Python3.6</h3><ul>\n<li><p>安装依赖工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel mysql-devel gcc gcc-devel python-devel</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载python3.6.8</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf Python-3.6.8.tgz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将python移动至规范的软件安装目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv Python-3.6.8 /usr/local</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译安装python</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/Python-3.6.8/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"安装虚拟环境\"><a href=\"#安装虚拟环境\" class=\"headerlink\" title=\"安装虚拟环境\"></a>安装虚拟环境</h3><ul>\n<li><p>安装virtualenvwrapper</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># update pip</span><br><span class=\"line\">sudo /usr/local/bin/pip3 install --upgrade pip</span><br><span class=\"line\">sudo /usr/local/bin/pip3 install virtualenv</span><br><span class=\"line\">sudo /usr/local/bin/pip3 install virtualenvwrapper</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建目录存放虚拟环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir $HOME/.virtualenvs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改~/.bashrc文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim~/.bashrc</span><br><span class=\"line\"># 添加下面的内容</span><br><span class=\"line\">export WORKON_HOME=$HOME/.virtualenvs</span><br><span class=\"line\">export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3.6</span><br><span class=\"line\">source /usr/local/bin/virtualenvwrapper.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建并进入虚拟环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkvirtualenv myenv</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"安装Django并创建项目\"><a href=\"#安装Django并创建项目\" class=\"headerlink\" title=\"安装Django并创建项目\"></a>安装Django并创建项目</h3><ul>\n<li><p>虚拟环境下安装Django==1.11.20</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install django==1.11.20</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建项目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 进入放置项目的文件夹</span><br><span class=\"line\">cd /home/root/pydj</span><br><span class=\"line\">sudo /home/admin/.virtualenvs/myenv/bin/django-admin startproject mysite</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取文件夹权限，防止runserver时数据库出错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chmod -R 777 /home/root/pydj</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将你的服务器ip添加到settings.py，避免外网访问错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALLOWED_HOSTS = [&apos;myip&apos;]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>试运行项目，不指定0.0.0.0外网访问会出错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py runserver 0.0.0.0:8000</span><br></pre></td></tr></table></figure>\n<p>访问：<a href=\"http://myip:8000\" target=\"_blank\" rel=\"noopener\">http://myip:8000</a> 可以看到：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">It worked!</span><br><span class=\"line\">Congratulations on your first Django-powered page.</span><br><span class=\"line\">Next, start your first app by running python manage.py startapp [app_label].</span><br><span class=\"line\">You&apos;re seeing this message because you have DEBUG = True in your Django settings file and you haven&apos;t configured any URLs. Get to work!</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"uWSGI的安装和配置\"><a href=\"#uWSGI的安装和配置\" class=\"headerlink\" title=\"uWSGI的安装和配置\"></a>uWSGI的安装和配置</h3><ul>\n<li><p>虚拟环境下安装uWSGI</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install uwsgi</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>测试</p>\n<p>创建一个test.py文件，内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def application(env, start_response):</span><br><span class=\"line\">    start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;,&apos;text/html&apos;)])</span><br><span class=\"line\">    return [b&quot;Hello World&quot;] # python3</span><br><span class=\"line\">    #return [&quot;Hello World&quot;] # python2</span><br></pre></td></tr></table></figure>\n<p>运行uWSGI:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --http :8000 --wsgi-file test.py</span><br></pre></td></tr></table></figure>\n<p>访问 <a href=\"http://myip:8000\" target=\"_blank\" rel=\"noopener\">http://myip:8000</a> 可以看到：Hello World</p>\n</li>\n<li><p>使用uWSGI运行Django项目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --http :8000 --module mysite.wsgi</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"nginx的安装和配置\"><a href=\"#nginx的安装和配置\" class=\"headerlink\" title=\"nginx的安装和配置\"></a>nginx的安装和配置</h3><ul>\n<li><p>安装nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装nginx源</span><br><span class=\"line\">sudo rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br><span class=\"line\">安装nginx</span><br><span class=\"line\">yum install -y nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nginx</span><br></pre></td></tr></table></figure>\n<p>浏览器打开ip地址可以看到Welcome to nginx!</p>\n</li>\n<li><p>进入django项目文件夹，创建uwsgi_params文件，添加如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi_param  QUERY_STRING       $query_string;</span><br><span class=\"line\">uwsgi_param  REQUEST_METHOD     $request_method;</span><br><span class=\"line\">uwsgi_param  CONTENT_TYPE       $content_type;</span><br><span class=\"line\">uwsgi_param  CONTENT_LENGTH     $content_length;</span><br><span class=\"line\"></span><br><span class=\"line\">uwsgi_param  REQUEST_URI        $request_uri;</span><br><span class=\"line\">uwsgi_param  PATH_INFO          $document_uri;</span><br><span class=\"line\">uwsgi_param  DOCUMENT_ROOT      $document_root;</span><br><span class=\"line\">uwsgi_param  SERVER_PROTOCOL    $server_protocol;</span><br><span class=\"line\">uwsgi_param  REQUEST_SCHEME     $scheme;</span><br><span class=\"line\">uwsgi_param  HTTPS              $https if_not_empty;</span><br><span class=\"line\"></span><br><span class=\"line\">uwsgi_param  REMOTE_ADDR        $remote_addr;</span><br><span class=\"line\">uwsgi_param  REMOTE_PORT        $remote_port;</span><br><span class=\"line\">uwsgi_param  SERVER_PORT        $server_port;</span><br><span class=\"line\">uwsgi_param  SERVER_NAME        $server_name;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 /etc/nginx/ 文件夹下创建 sites-enabled 文件夹，并在其下创建nginx.conf，添加如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># nginx.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># the upstream component nginx needs to connect to</span><br><span class=\"line\">upstream django &#123;</span><br><span class=\"line\">    # server unix:///path/to/your/mysite/mysite.sock; # for a file socket</span><br><span class=\"line\">    server 127.0.0.1:8001; # for a web port socket (we&apos;ll use this first)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># configuration of the server</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    # the port your site will be served on</span><br><span class=\"line\">    listen      80;</span><br><span class=\"line\">    # the domain name it will serve for</span><br><span class=\"line\">    server_name .example.com; # substitute your machine&apos;s IP address or FQDN</span><br><span class=\"line\">    charset     utf-8;</span><br><span class=\"line\"></span><br><span class=\"line\">    # max upload size</span><br><span class=\"line\">    client_max_body_size 75M;   # adjust to taste</span><br><span class=\"line\"></span><br><span class=\"line\">    # Django media</span><br><span class=\"line\">    location /media  &#123;</span><br><span class=\"line\">        alias /path/to/your/mysite/media;  # your Django project&apos;s media files - amend as required</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location /static &#123;</span><br><span class=\"line\">        alias /path/to/your/mysite/static; # your Django project&apos;s static files - amend as required</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    # Finally, send all non-media requests to the Django server.</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        uwsgi_pass  django;</span><br><span class=\"line\">        include     /path/to/your/mysite/uwsgi_params; # the uwsgi_params file you installed</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改/etc/nginx/nginx.conf，在http下添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include /etc/nginx/sites-enabled/*;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>部署静态文件</p>\n<p>在运行nginx之前，你必须收集所有的Django静态文件到静态文件夹里。首先，必须编辑mysite/settings.py，添加:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">STATIC_ROOT = os.path.join(BASE_DIR, &quot;static/&quot;)</span><br></pre></td></tr></table></figure>\n<p>然后运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py collectstatic</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /usr/sbin/nginx -s reload</span><br></pre></td></tr></table></figure>\n<p>此时打开 ip:8000 会出现502错误，因为nginx与uwsgi的socket通信还没开始。</p>\n<p>虚拟环境下运行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --socket :8001 --wsgi-file test.py</span><br></pre></td></tr></table></figure>\n<p>此时，打开ip:8000可以看到Hello World。</p>\n</li>\n</ul>\n<h3 id=\"使用Unix-sockets代替端口\"><a href=\"#使用Unix-sockets代替端口\" class=\"headerlink\" title=\"使用Unix sockets代替端口\"></a>使用Unix sockets代替端口</h3><p>编辑sites-enabled文件夹下的nginx.conf文件，修改如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server unix:///path/to/your/mysite/mysite.sock; # for a file socket  </span><br><span class=\"line\"># server 127.0.0.1:8001; # for a web port socket (we&apos;ll use this first)</span><br></pre></td></tr></table></figure>\n<p>重启nginx。</p>\n<p>重新运行uWSGI：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --socket mysite.sock --wsgi-file test.py --chmod-socket=666</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用uWSGI和Nginx运行django项目\"><a href=\"#使用uWSGI和Nginx运行django项目\" class=\"headerlink\" title=\"使用uWSGI和Nginx运行django项目\"></a>使用uWSGI和Nginx运行django项目</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --socket mysite.sock --module mysite.wsgi --chmod-socket=666</span><br></pre></td></tr></table></figure>\n<p>现在uwsgi和nginx应该在服务你的Django应用，而不是hello world。</p>\n<h3 id=\"配置uWSGI的ini文件\"><a href=\"#配置uWSGI的ini文件\" class=\"headerlink\" title=\"配置uWSGI的ini文件\"></a>配置uWSGI的ini文件</h3><ul>\n<li><p>项目文件夹下创建django_uwsgi.ini，添加以下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># django_uwsgi.ini file</span><br><span class=\"line\">[uwsgi]</span><br><span class=\"line\"></span><br><span class=\"line\"># Django-related settings</span><br><span class=\"line\"># the base directory (full path)</span><br><span class=\"line\">chdir           = /path/to/your/project  </span><br><span class=\"line\"># Django&apos;s wsgi file</span><br><span class=\"line\">module          = project.wsgi  </span><br><span class=\"line\"># the virtualenv (full path)</span><br><span class=\"line\">#home            = /path/to/virtualenv</span><br><span class=\"line\"></span><br><span class=\"line\"># process-related settings</span><br><span class=\"line\"># master</span><br><span class=\"line\">master          = true  </span><br><span class=\"line\"># maximum number of worker processes</span><br><span class=\"line\">processes       = 10  </span><br><span class=\"line\"># the socket (use the full path to be safe</span><br><span class=\"line\">socket          = mysite.sock  </span><br><span class=\"line\"># ... with appropriate permissions - may be needed</span><br><span class=\"line\">chmod-socket    = 666</span><br><span class=\"line\"># clear environment on exit</span><br><span class=\"line\">vacuum          = true</span><br></pre></td></tr></table></figure>\n<p>使用如下命令运行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --ini django_uwsgi.ini</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"附\"><a href=\"#附\" class=\"headerlink\" title=\"附\"></a>附</h3><ul>\n<li><p>让uwsgi在后台运行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --ini mysite_uwsgi.ini --logto mysite.log &amp;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看uwsgi进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux|grep uwsgi</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>杀死uwsgi进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#停止进程</span><br><span class=\"line\">uwsgi --stop uwsgi.pid</span><br><span class=\"line\">#kill pid会发送SIGTERM，只会导致重启，而不是结束掉。需要发送SIGINT或SIGQUIT，对应着是INT才可以</span><br><span class=\"line\">killall -s INT uwsgi</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以上就是在服务器中部署Django项目的所有过程，如有不当之处请指正。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>作为django网站开发的学习者，这是我在搭建Centos-Django-Nginx-Uwsgi服务器时留下的笔记。在搭建过程中，参考了大量的网上教程，但是没有一篇能完整地带我正确地走过全部流程，大坑小坑不计其数，因此在这里和大家分享一下我搭建过程中的整个流程，希望对学习者有所帮助。</p>\n<h3 id=\"安装Python3-6\"><a href=\"#安装Python3-6\" class=\"headerlink\" title=\"安装Python3.6\"></a>安装Python3.6</h3><ul>\n<li><p>安装依赖工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel mysql-devel gcc gcc-devel python-devel</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载python3.6.8</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解压</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf Python-3.6.8.tgz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将python移动至规范的软件安装目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mv Python-3.6.8 /usr/local</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译安装python</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/Python-3.6.8/</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"安装虚拟环境\"><a href=\"#安装虚拟环境\" class=\"headerlink\" title=\"安装虚拟环境\"></a>安装虚拟环境</h3><ul>\n<li><p>安装virtualenvwrapper</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># update pip</span><br><span class=\"line\">sudo /usr/local/bin/pip3 install --upgrade pip</span><br><span class=\"line\">sudo /usr/local/bin/pip3 install virtualenv</span><br><span class=\"line\">sudo /usr/local/bin/pip3 install virtualenvwrapper</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建目录存放虚拟环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir $HOME/.virtualenvs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改~/.bashrc文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim~/.bashrc</span><br><span class=\"line\"># 添加下面的内容</span><br><span class=\"line\">export WORKON_HOME=$HOME/.virtualenvs</span><br><span class=\"line\">export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3.6</span><br><span class=\"line\">source /usr/local/bin/virtualenvwrapper.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建并进入虚拟环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkvirtualenv myenv</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"安装Django并创建项目\"><a href=\"#安装Django并创建项目\" class=\"headerlink\" title=\"安装Django并创建项目\"></a>安装Django并创建项目</h3><ul>\n<li><p>虚拟环境下安装Django==1.11.20</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install django==1.11.20</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建项目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 进入放置项目的文件夹</span><br><span class=\"line\">cd /home/root/pydj</span><br><span class=\"line\">sudo /home/admin/.virtualenvs/myenv/bin/django-admin startproject mysite</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取文件夹权限，防止runserver时数据库出错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chmod -R 777 /home/root/pydj</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将你的服务器ip添加到settings.py，避免外网访问错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALLOWED_HOSTS = [&apos;myip&apos;]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>试运行项目，不指定0.0.0.0外网访问会出错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py runserver 0.0.0.0:8000</span><br></pre></td></tr></table></figure>\n<p>访问：<a href=\"http://myip:8000\" target=\"_blank\" rel=\"noopener\">http://myip:8000</a> 可以看到：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">It worked!</span><br><span class=\"line\">Congratulations on your first Django-powered page.</span><br><span class=\"line\">Next, start your first app by running python manage.py startapp [app_label].</span><br><span class=\"line\">You&apos;re seeing this message because you have DEBUG = True in your Django settings file and you haven&apos;t configured any URLs. Get to work!</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"uWSGI的安装和配置\"><a href=\"#uWSGI的安装和配置\" class=\"headerlink\" title=\"uWSGI的安装和配置\"></a>uWSGI的安装和配置</h3><ul>\n<li><p>虚拟环境下安装uWSGI</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install uwsgi</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>测试</p>\n<p>创建一个test.py文件，内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def application(env, start_response):</span><br><span class=\"line\">    start_response(&apos;200 OK&apos;, [(&apos;Content-Type&apos;,&apos;text/html&apos;)])</span><br><span class=\"line\">    return [b&quot;Hello World&quot;] # python3</span><br><span class=\"line\">    #return [&quot;Hello World&quot;] # python2</span><br></pre></td></tr></table></figure>\n<p>运行uWSGI:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --http :8000 --wsgi-file test.py</span><br></pre></td></tr></table></figure>\n<p>访问 <a href=\"http://myip:8000\" target=\"_blank\" rel=\"noopener\">http://myip:8000</a> 可以看到：Hello World</p>\n</li>\n<li><p>使用uWSGI运行Django项目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --http :8000 --module mysite.wsgi</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"nginx的安装和配置\"><a href=\"#nginx的安装和配置\" class=\"headerlink\" title=\"nginx的安装和配置\"></a>nginx的安装和配置</h3><ul>\n<li><p>安装nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装nginx源</span><br><span class=\"line\">sudo rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br><span class=\"line\">安装nginx</span><br><span class=\"line\">yum install -y nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nginx</span><br></pre></td></tr></table></figure>\n<p>浏览器打开ip地址可以看到Welcome to nginx!</p>\n</li>\n<li><p>进入django项目文件夹，创建uwsgi_params文件，添加如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi_param  QUERY_STRING       $query_string;</span><br><span class=\"line\">uwsgi_param  REQUEST_METHOD     $request_method;</span><br><span class=\"line\">uwsgi_param  CONTENT_TYPE       $content_type;</span><br><span class=\"line\">uwsgi_param  CONTENT_LENGTH     $content_length;</span><br><span class=\"line\"></span><br><span class=\"line\">uwsgi_param  REQUEST_URI        $request_uri;</span><br><span class=\"line\">uwsgi_param  PATH_INFO          $document_uri;</span><br><span class=\"line\">uwsgi_param  DOCUMENT_ROOT      $document_root;</span><br><span class=\"line\">uwsgi_param  SERVER_PROTOCOL    $server_protocol;</span><br><span class=\"line\">uwsgi_param  REQUEST_SCHEME     $scheme;</span><br><span class=\"line\">uwsgi_param  HTTPS              $https if_not_empty;</span><br><span class=\"line\"></span><br><span class=\"line\">uwsgi_param  REMOTE_ADDR        $remote_addr;</span><br><span class=\"line\">uwsgi_param  REMOTE_PORT        $remote_port;</span><br><span class=\"line\">uwsgi_param  SERVER_PORT        $server_port;</span><br><span class=\"line\">uwsgi_param  SERVER_NAME        $server_name;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 /etc/nginx/ 文件夹下创建 sites-enabled 文件夹，并在其下创建nginx.conf，添加如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># nginx.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># the upstream component nginx needs to connect to</span><br><span class=\"line\">upstream django &#123;</span><br><span class=\"line\">    # server unix:///path/to/your/mysite/mysite.sock; # for a file socket</span><br><span class=\"line\">    server 127.0.0.1:8001; # for a web port socket (we&apos;ll use this first)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"># configuration of the server</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    # the port your site will be served on</span><br><span class=\"line\">    listen      80;</span><br><span class=\"line\">    # the domain name it will serve for</span><br><span class=\"line\">    server_name .example.com; # substitute your machine&apos;s IP address or FQDN</span><br><span class=\"line\">    charset     utf-8;</span><br><span class=\"line\"></span><br><span class=\"line\">    # max upload size</span><br><span class=\"line\">    client_max_body_size 75M;   # adjust to taste</span><br><span class=\"line\"></span><br><span class=\"line\">    # Django media</span><br><span class=\"line\">    location /media  &#123;</span><br><span class=\"line\">        alias /path/to/your/mysite/media;  # your Django project&apos;s media files - amend as required</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    location /static &#123;</span><br><span class=\"line\">        alias /path/to/your/mysite/static; # your Django project&apos;s static files - amend as required</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    # Finally, send all non-media requests to the Django server.</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        uwsgi_pass  django;</span><br><span class=\"line\">        include     /path/to/your/mysite/uwsgi_params; # the uwsgi_params file you installed</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改/etc/nginx/nginx.conf，在http下添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include /etc/nginx/sites-enabled/*;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>部署静态文件</p>\n<p>在运行nginx之前，你必须收集所有的Django静态文件到静态文件夹里。首先，必须编辑mysite/settings.py，添加:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">STATIC_ROOT = os.path.join(BASE_DIR, &quot;static/&quot;)</span><br></pre></td></tr></table></figure>\n<p>然后运行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py collectstatic</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /usr/sbin/nginx -s reload</span><br></pre></td></tr></table></figure>\n<p>此时打开 ip:8000 会出现502错误，因为nginx与uwsgi的socket通信还没开始。</p>\n<p>虚拟环境下运行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --socket :8001 --wsgi-file test.py</span><br></pre></td></tr></table></figure>\n<p>此时，打开ip:8000可以看到Hello World。</p>\n</li>\n</ul>\n<h3 id=\"使用Unix-sockets代替端口\"><a href=\"#使用Unix-sockets代替端口\" class=\"headerlink\" title=\"使用Unix sockets代替端口\"></a>使用Unix sockets代替端口</h3><p>编辑sites-enabled文件夹下的nginx.conf文件，修改如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server unix:///path/to/your/mysite/mysite.sock; # for a file socket  </span><br><span class=\"line\"># server 127.0.0.1:8001; # for a web port socket (we&apos;ll use this first)</span><br></pre></td></tr></table></figure>\n<p>重启nginx。</p>\n<p>重新运行uWSGI：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --socket mysite.sock --wsgi-file test.py --chmod-socket=666</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用uWSGI和Nginx运行django项目\"><a href=\"#使用uWSGI和Nginx运行django项目\" class=\"headerlink\" title=\"使用uWSGI和Nginx运行django项目\"></a>使用uWSGI和Nginx运行django项目</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --socket mysite.sock --module mysite.wsgi --chmod-socket=666</span><br></pre></td></tr></table></figure>\n<p>现在uwsgi和nginx应该在服务你的Django应用，而不是hello world。</p>\n<h3 id=\"配置uWSGI的ini文件\"><a href=\"#配置uWSGI的ini文件\" class=\"headerlink\" title=\"配置uWSGI的ini文件\"></a>配置uWSGI的ini文件</h3><ul>\n<li><p>项目文件夹下创建django_uwsgi.ini，添加以下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># django_uwsgi.ini file</span><br><span class=\"line\">[uwsgi]</span><br><span class=\"line\"></span><br><span class=\"line\"># Django-related settings</span><br><span class=\"line\"># the base directory (full path)</span><br><span class=\"line\">chdir           = /path/to/your/project  </span><br><span class=\"line\"># Django&apos;s wsgi file</span><br><span class=\"line\">module          = project.wsgi  </span><br><span class=\"line\"># the virtualenv (full path)</span><br><span class=\"line\">#home            = /path/to/virtualenv</span><br><span class=\"line\"></span><br><span class=\"line\"># process-related settings</span><br><span class=\"line\"># master</span><br><span class=\"line\">master          = true  </span><br><span class=\"line\"># maximum number of worker processes</span><br><span class=\"line\">processes       = 10  </span><br><span class=\"line\"># the socket (use the full path to be safe</span><br><span class=\"line\">socket          = mysite.sock  </span><br><span class=\"line\"># ... with appropriate permissions - may be needed</span><br><span class=\"line\">chmod-socket    = 666</span><br><span class=\"line\"># clear environment on exit</span><br><span class=\"line\">vacuum          = true</span><br></pre></td></tr></table></figure>\n<p>使用如下命令运行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --ini django_uwsgi.ini</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"附\"><a href=\"#附\" class=\"headerlink\" title=\"附\"></a>附</h3><ul>\n<li><p>让uwsgi在后台运行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uwsgi --ini mysite_uwsgi.ini --logto mysite.log &amp;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看uwsgi进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux|grep uwsgi</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>杀死uwsgi进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#停止进程</span><br><span class=\"line\">uwsgi --stop uwsgi.pid</span><br><span class=\"line\">#kill pid会发送SIGTERM，只会导致重启，而不是结束掉。需要发送SIGINT或SIGQUIT，对应着是INT才可以</span><br><span class=\"line\">killall -s INT uwsgi</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>以上就是在服务器中部署Django项目的所有过程，如有不当之处请指正。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjup2ur3a000240um4dsefafj","category_id":"cjup2zqpz0000x8umt68xxheu","_id":"cjup2zqq20003x8ume12ormgm"}],"PostTag":[{"post_id":"cjup2ur3a000240um4dsefafj","tag_id":"cjup2zqq00001x8um7k6fng2b","_id":"cjup2zqq40004x8umap5s09n7"},{"post_id":"cjup2ur3a000240um4dsefafj","tag_id":"cjup2zqq10002x8um2y05zzo6","_id":"cjup2zqq50005x8umwef0amv9"}],"Tag":[{"name":"django,web服务器","_id":"cjup2ur3i000340um5k62ynuz"},{"name":"django","_id":"cjup2zqq00001x8um7k6fng2b"},{"name":"web服务器","_id":"cjup2zqq10002x8um2y05zzo6"}]}}